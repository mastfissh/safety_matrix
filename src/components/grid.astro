---

const { data } = Astro.props;
import { combo, risk, drug_css_prefix, confidence, linkify } from '../util';
import Combolink from './combolink.astro';
import { getCollection } from 'astro:content';
import Icon from "heroicons-astro/Heroicon.astro";
import { Picture } from '@astrojs/image/components';
const substances = await getCollection('psychoactives');
let idx = {}
for (let sub of substances){
  idx[sub['slug']] = sub
}
let drugs = []
for (let drug of data["drugs"]) {
  let item = idx[linkify(drug)]
  item.key = drug
  item.title = item.data.title
  drugs.push(item)
}

function risk_to_bg(risk){
  const map = {
    'SR' : 'bg-red-100',
    'GR' : 'bg-orange-100',
    'MR' : 'bg-amber-100',
    'LRS' : 'bg-cyan-100',
    'LRD' : 'bg-violet-100',
    'LRNS' : 'bg-blue-100',
    'unknown' : 'bg-slate-100',
  }
  return map[risk]
}

function drug_to_keywords(drug){
  drug = linkify(drug)
  const drug_info = idx[drug];
  let out = [drug]
  if (drug_info){
    out = out.concat(drug_info.data.aka)
    out = out.concat(drug_info.data.family_members)
  }
  return out.join(',')
}

function drug_to_title(i){
  let drug = linkify(i)
  const drug_info = idx[drug];
  return drug_info.data.title
}

---
<script>
window.addEventListener("load", (event) => {
  if (!document.getElementById('safety_grid')){
    return
  }
  const checkboxes = document.querySelectorAll('.filter_check');
  function compute_visibility(){
    let fragments = []
    checkboxes.forEach((box) => {
      if (box.checked){
        fragments.push(box.id.replace('drug_', ''))
        for (const item of document.querySelectorAll("." + box.id)) {
          item.style.display = '';
        }
      }
    })
    checkboxes.forEach((box) => {
      if (!box.checked) {
        for (const item of document.querySelectorAll("." + box.id)) {
          item.style.display = 'none';
        }
      }
    })
    window.location.hash = fragments.join(',')
  }
  function checkBoxes(hashes) {
    for (let checkbox of checkboxes){
      if (hashes.includes(checkbox.id.replace('drug_', ''))){
        checkbox.checked = true
      }
    }
  }
  if(window.location.hash) {
    checkBoxes(window.location.hash)
  } else {
    checkBoxes('LSD,Cannabis,Opioids')
  }
  compute_visibility()
  document.getElementById('safety_grid').style.display = '';
  checkboxes.forEach((outerbox) => {
    outerbox.addEventListener('click', (event) => {
      compute_visibility()
    });
  });

  const search = document.getElementById('search')
  const items = document.querySelectorAll('.searchable');
  search.addEventListener("input", (event) => {
    items.forEach((item) => {
      let searchwords = search.value.toLowerCase().replace(' and ', ' ').split(' ')
      let visible = true
      for (let searchword of searchwords){
        visible = visible &&  (item.dataset.keywords.toLowerCase().search(searchword) != -1)
      }
      if (visible){
        item.style.display = '';
        let aka = ''
        let title_is_found = true
        for (let searchword of searchwords){
          let search_title_is_found = (item.dataset.title.toLowerCase().search(searchword) != -1)
          title_is_found = title_is_found && search_title_is_found
          if (!search_title_is_found){
            let keywords = item.dataset.keywords.split(',')
            for (let word of keywords) {
              if (word.toLowerCase().search(searchword) != -1){
                aka = aka + `${word} `
              }
            }
          }
        }
        aka = ` (${aka})`
        // console.debug(item)
        if (!title_is_found){
          item.querySelector('.searchable-title').innerText = item.dataset.title  + aka
        } else {
          item.querySelector('.searchable-title').innerText = item.dataset.title
        }

      } else {
        item.style.display = 'none';
      }
    })
  });
});
</script>

<div class="block rounded-lg my-6 bg-gray-50 p-6 shadow-[0_2px_15px_-3px_rgba(0,0,0,0.07),0_10px_20px_-2px_rgba(0,0,0,0.04)] max-w-2xl mx-auto">
 <h3 class="text-xl font-bold"> Key </h3>
 <p>Risk = danger or hazard.</p>
<p>Synergy = increased effects, or new effects</p>
<p>Decrease = reduced effects</p>
 </p>
 <div class="flex space-x-4">
  <Icon iconCode="exclamation-circle" iconStyle="outline" customClasses="h-7 w-7 inline" />
  low confidence in the risk rating
</div>
 <span class="grid grid-cols-2 lg:grid-cols-3">
    <span class:list={risk_to_bg('SR')} class = "text-m font-medium m-2 px-2.5 py-0.5 rounded"> Significant Risk</span>
    <span class:list={risk_to_bg('GR')} class = "text-m font-medium m-2 px-2.5 py-0.5 rounded"> Greater Risk</span>
    <span class:list={risk_to_bg('MR')} class = "text-m font-medium m-2 px-2.5 py-0.5 rounded"> Minor Risk</span>
    <span class:list={risk_to_bg('LRS')} class = "text-m font-medium m-2 px-2.5 py-0.5 rounded"> Low Risk Synergy</span>
    <span class:list={risk_to_bg('LRD')} class = "text-m font-medium m-2 px-2.5 py-0.5 rounded"> Low Risk Decrease</span>
    <span class:list={risk_to_bg('LRNS')} class = "text-m font-medium m-2 px-2.5 py-0.5 rounded"> Low Risk No Synergy</span>
  </span>
</div>
<div>
<table id="safety_grid" class="w-full table-fixed border-collapse border-2 border-slate-900 text-sm md:text-md lg:text-lg" style="display: none;">
  <tr class:list={"topkey"} class="border-grey-500 border p-1 overflow-hidden">
    <th class="border-grey-500 border font-normal">Grid</th>
    {drugs.map((drug) => (
      <th class:list={drug_css_prefix(drug.key)} class="border-grey-500 border p-1 overflow-hidden font-normal"><a class="font-medium text-black underline hover:no-underline w-full h-full block" href={`${import.meta.env.BASE_URL}psychoactives/` + drug.slug + '/'}> {drug.title} </a></th>
    ))
  }
  </tr>
    {drugs.map((drugrow) => (
      <tr class:list={drug_css_prefix(drugrow.key)} >
        <td class:list={drug_css_prefix(drugrow.key)} class="border-grey-500 border p-1 overflow-hidden"><a class="font-medium text-black underline hover:no-underline w-full h-full block" href={`${import.meta.env.BASE_URL}psychoactives/` + drugrow.slug + '/'}> {drugrow.title}</a></td>
        {drugs.map((drugcell) => (
          <td class="border-grey-500 border p-1 overflow-hidden" class:list={[risk_to_bg(risk([drugrow.key,drugcell.key], data)),drug_css_prefix(drugrow.key),drug_css_prefix(drugcell.key)]}><Combolink drug1={drugrow} drug2={drugcell} combo={combo([drugrow.key,drugcell.key])} conf={confidence([drugrow.key,drugcell.key], data)} /></td>
         ))}
      </tr>
     ))}
</table>
</div>
<div clas="container">
<form class="my-6">
    <label for="search" class="mb-2 text-sm font-medium text-gray-900 sr-only">Search</label>
    <div class="relative">

        <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
          <Icon iconCode="search" iconStyle="outline" customClasses="w-5 h-5 stroke-gray-500" />
        </div>
        <input type="search" id="search" class="block w-full p-4 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500  border-gray-600 placeholder-gray-400 text-black focus:ring-blue-500 focus:border-blue-50" placeholder="Search" required>

    </div>
  </form>
<ul class="grid w-full gap-6 grid-cols-2 md:grid-cols-4 lg:grid-cols-5">
  {drugs.map((drug) => (
    <li class="searchable" data-title={drug_to_title(drug.key)} data-keywords={drug_to_keywords(drug.key)}>
        <input type="checkbox" class="filter_check hidden peer" id={drug_css_prefix(drug.key)} name={drug_css_prefix(drug.key)} value={drug_css_prefix(drug.key)} >
        <label for={drug_css_prefix(drug.key)} class="inline-flex items-center justify-between w-full p-5  bg-white border-2 border-gray-200 rounded-lg cursor-pointer hover:text-gray-300 border-gray-700 peer-checked:border-blue-600 peer-checked:text-gray-300  peer-checked:bg-gray-600 peer-checked:text-gray-50 text-gray-1000 ">
            <div class="block">
                <div class="searchable-title w-full text-md lg:text-lg font-semibold">{drug_to_title(drug.key)}</div>
                <Picture
        class="h-auto w-36 rounded-lg align-middle leading-none shadow-lg"
        src={'../../' + drug.data.image_location}
        widths={[80, 160, 320]}
        aspectRatio={"4:3"}
        alt={drug.data.image_caption}
      />
            </div>

        </label>
    </li>
  ))}
</ul>
</div>
