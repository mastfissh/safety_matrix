---

const { page, data } = Astro.props;
let drugs = data["drugs"].filter(item => item !== page)
import { combo, risk,risk_css_prefix, drug_css_prefix, confidence, linkify } from '../util';
import '../style.css';
import Druglink from './druglink.astro';
import { getCollection } from 'astro:content';
const substances = await getCollection('substances');
let idx = {}
for (let sub of substances){
  idx[sub['slug']] = sub
}

function drug_to_keywords(drug){
  drug = linkify(drug)
  const drug_info = idx[drug];
  let out = [drug]
  if (drug_info){
    out = out.concat(drug_info.data.aka)
  }
  return out.join(',')
}
---
<script>
window.onload = (event) => {
  if (!document.getElementById('safety_grid')){
    return
  }
  const checkboxes = document.querySelectorAll('.filter_check');
  function compute_visibility(){
    let fragments = []
    checkboxes.forEach((box) => {
      if (box.checked){
        fragments.push(box.id.replace('drug_', ''))
        for (const item of document.querySelectorAll("." + box.id)) {
          item.style.display = '';
        }
      }
    })
    checkboxes.forEach((box) => {
      if (!box.checked) {
        for (const item of document.querySelectorAll("." + box.id)) {
          item.style.display = 'none';
        }
      }
    })
    window.location.hash = fragments.join(',')
  }
  function checkBoxes(hashes) {
    for (let checkbox of checkboxes){
      if (hashes.includes(checkbox.id.replace('drug_', ''))){
        checkbox.checked = true
      }
    }
  }
  if(window.location.hash) {
    checkBoxes(window.location.hash)
  } else {
    checkBoxes('LSD,Cannabis,Opioids')
  }
  compute_visibility()
  document.getElementById('safety_grid').style.display = '';
  checkboxes.forEach((outerbox) => {
    outerbox.addEventListener('click', (event) => {
      compute_visibility()
    });
  });

  const search = document.getElementById('search')
  const items = document.querySelectorAll('.searchable');
  search.addEventListener("input", (event) => {
    items.forEach((item) => {
      if (item.dataset.keywords.toLowerCase().search(search.value.toLowerCase()) != -1){
        item.style.display = '';
      } else {
        item.style.display = 'none';
      }
    })
  });
};
</script>

<div class="block rounded-lg my-6 bg-gray-50 p-6 shadow-[0_2px_15px_-3px_rgba(0,0,0,0.07),0_10px_20px_-2px_rgba(0,0,0,0.04)] max-w-2xl mx-auto">
 <h5 class="text-xl font-bold"> Key </h5>
 <p>In this chart ‘risk’ refers to danger or hazard. ‘Synergy’ refers to increased subjective effects (or in some cases, the creation of an additional subjective effect), while ‘decrease’ refers to reduced subjective effects.
 </p>
 <div class="flex space-x-4">
  <svg
    xmlns="http://www.w3.org/2000/svg"
    fill="none"
    viewBox="0 0 24 24"
    stroke-width="1.5"
    stroke="currentColor"
    class="h-8 w-8">
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z" />
  </svg>
  This icon indicates that there's low confidence in the risk rating
</div>
 <span class="grid grid-cols-3">
    <span class = "risk_SR text-m font-medium m-2 px-2.5 py-0.5 rounded"> Significant Risk</span>
    <span class = "risk_GR text-m font-medium m-2 px-2.5 py-0.5 rounded"> Greater Risk</span>
    <span class = "risk_MR text-m font-medium m-2 px-2.5 py-0.5 rounded"> Minor Risk</span>
    <span class = "risk_LRS text-m font-medium m-2 px-2.5 py-0.5 rounded"> Low Risk Synergy</span>
    <span class = "risk_LRD text-m font-medium m-2 px-2.5 py-0.5 rounded"> Low Risk Decrease</span>
    <span class = "risk_LRNS text-m font-medium m-2 px-2.5 py-0.5 rounded"> Low Risk No Synergy</span>
  </span>
</div>
<div>
<table id="safety_grid" class="m-6" style="display: none;">
  <tr class:list={"topkey"}>
    <td></td>
    {drugs.map((drug) => (
      <td class:list={drug_css_prefix(drug)} >{drug}</td>
    ))
  }
  </tr>
    {drugs.map((drugrow) => (
      <tr class:list={drug_css_prefix(drugrow)}>
        <td class:list={drug_css_prefix(drugrow)}>{drugrow}</td>
        {drugs.map((drugcell) => (
          <td class:list={[risk_css_prefix(risk([page,drugrow,drugcell], data)),drug_css_prefix(drugrow),drug_css_prefix(drugcell)]}><Druglink drug={combo([page,drugrow,drugcell])} conf={confidence([page,drugrow,drugcell], data)} /></td>
         ))}
      </tr>
     ))}
</table>
</div>
<div clas="container">
<form>
    <label for="search" class="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white">Search</label>
    <div class="relative">
        <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
            <svg aria-hidden="true" class="w-5 h-5 text-gray-500 dark:text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg>
        </div>
        <input type="search" id="search" class="block w-full p-4 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Search" required>

    </div>
  </form>
<ul class="grid w-full gap-6 grid-cols-3 md:grid-cols-5">
  {drugs.map((drug) => (
    <li class="searchable" data-keywords={drug_to_keywords(drug)}>
        <input type="checkbox" class="filter_check hidden peer" id={drug_css_prefix(drug)} name={drug_css_prefix(drug)} value={drug_css_prefix(drug)} >
        <label for={drug_css_prefix(drug)} class="inline-flex items-center justify-between w-full p-5  bg-white border-2 border-gray-200 rounded-lg cursor-pointer hover:text-gray-300 border-gray-700 peer-checked:border-blue-600 peer-checked:text-gray-300  peer-checked:bg-gray-600 peer-checked:text-gray-50 text-gray-1000 ">
            <div class="block">
                <div class="w-full text-lg font-semibold">{drug}</div>
            </div>
        </label>
    </li>
  ))}
</ul>
</div>
