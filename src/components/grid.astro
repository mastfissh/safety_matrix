---

const { page, data } = Astro.props;
let drugs = data["drugs"].filter(item => item !== page)
import { combo, risk,risk_css_prefix, drug_css_prefix } from '../util';
import '../style.css';
import Druglink from './druglink.astro';
---
<script>
window.onload = (event) => {
  if (!document.getElementById('safety_grid')){
    return
  }
  const checkboxes = document.querySelectorAll('.filter_check');
  function compute_visibility(){
    let fragments = []
    checkboxes.forEach((box) => {
      if (box.checked){
        fragments.push(box.id.replace('drug_', ''))
        for (const item of document.querySelectorAll("." + box.id)) {
          item.style.display = '';
        }
      }
    })
    checkboxes.forEach((box) => {
      if (!box.checked) {
        for (const item of document.querySelectorAll("." + box.id)) {
          item.style.display = 'none';
        }
      }
    })
    window.location.hash = fragments.join(',')
  }
  function checkBoxes(hashes) {
    for (let checkbox of checkboxes){
      if (hashes.includes(checkbox.id.replace('drug_', ''))){
        checkbox.checked = true
      }
    }
  }
  if(window.location.hash) {
    checkBoxes(window.location.hash)
  } else {
    checkBoxes('LSD,Cannabis,Opiods')
  }
  compute_visibility()
  document.getElementById('safety_grid').style.display = '';
  checkboxes.forEach((outerbox) => {
    outerbox.addEventListener('click', (event) => {
      compute_visibility()
    });
  });
};
</script>

<ul class="grid w-full gap-6 grid-cols-3 md:grid-cols-5">
  {drugs.map((drug) => (
    <li>
        <input type="checkbox" class="filter_check hidden peer" id={drug_css_prefix(drug)} name={drug_css_prefix(drug)} value={drug_css_prefix(drug)} >
        <label for={drug_css_prefix(drug)} class="inline-flex items-center justify-between w-full p-5  bg-white border-2 border-gray-200 rounded-lg cursor-pointer hover:text-gray-300 border-gray-700 peer-checked:border-blue-600 peer-checked:text-gray-300  peer-checked:bg-gray-600 peer-checked:text-gray-600 text-gray-1000 ">
            <div class="block">
                <div class="w-full text-lg font-semibold">{drug}</div>
            </div>
        </label>
    </li>
  ))}
</ul>
 <h3> Key </h3>
 <p>In this chart ‘risk’ refers to danger or hazard. ‘Synergy’ refers to increased subjective effects (or in some cases, the creation of an additional subjective effect), while ‘decrease’ refers to reduced subjective effects.
 </p>
    <span class = "risk_SR text-m font-medium mr-2 px-2.5 py-0.5 rounded"> Significant risk</span>
    <span class = "risk_GR text-m font-medium mr-2 px-2.5 py-0.5 rounded"> Greater risk</span>
    <span class = "risk_MR text-m font-medium mr-2 px-2.5 py-0.5 rounded"> Minor risk</span>
    <span class = "risk_LRS text-m font-medium mr-2 px-2.5 py-0.5 rounded"> low risk synergy</span>
    <span class = "risk_LRD text-m font-medium mr-2 px-2.5 py-0.5 rounded"> low risk decrease</span>
    <span class = "risk_LRNS text-m font-medium mr-2 px-2.5 py-0.5 rounded"> low risk no synergy</span>
<table id="safety_grid" style="display: none;">
  <tr class:list={"topkey"}>
    <td></td>
    {drugs.map((drug) => (
      <td class:list={drug_css_prefix(drug)} >{drug}</td>
    ))
  }
  </tr>
    {drugs.map((drugrow) => (
      <tr class:list={drug_css_prefix(drugrow)}>
        <td class:list={drug_css_prefix(drugrow)}>{drugrow}</td>
        {drugs.map((drugcell) => (
          <td class:list={[risk_css_prefix(risk([page,drugrow,drugcell], data)),drug_css_prefix(drugrow),drug_css_prefix(drugcell)]}><Druglink drug={combo([page,drugrow,drugcell])} /></td>
         ))}
      </tr>
     ))}

</table>
