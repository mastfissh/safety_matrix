---

const { page, data } = Astro.props;
let drugs = data["drugs"].filter(item => item !== page)
import { combo, risk,risk_css_prefix, drug_css_prefix } from '../util';
import '../style.css';
import Druglink from './druglink.astro';
---
<script>
window.onload = (event) => {
  const checkboxes = document.querySelectorAll('.filter_check');
  function compute_visibility(){
    let fragments = []
    checkboxes.forEach((box) => {
      if (box.checked){
        fragments.push(box.id.replace('drug_', ''))
        for (const item of document.querySelectorAll("." + box.id)) {
          item.style.display = '';
        }
      }
    })
    checkboxes.forEach((box) => {
      if (!box.checked) {
        for (const item of document.querySelectorAll("." + box.id)) {
          item.style.display = 'none';
        }
      }
    })
    window.location.hash = fragments.join(',')
  }
  function checkBoxes(hashes) {
    for (let checkbox of checkboxes){
      if (hashes.includes(checkbox.id.replace('drug_', ''))){
        checkbox.checked = true
      }
    }
  }
  if(window.location.hash) {
    checkBoxes(window.location.hash)
  } else {
    checkBoxes('LSD,Cannabis,Opiods')
  }
  compute_visibility()
  document.getElementById('safety_grid').style.display = '';
  checkboxes.forEach((outerbox) => {
    outerbox.addEventListener('click', (event) => {
      compute_visibility()
    });
  });
};
</script>

<div>
  {drugs.map((drug) => (
    <input type="checkbox" class="filter_check" id={drug_css_prefix(drug)} name={drug_css_prefix(drug)} value={drug_css_prefix(drug)} >
    <label for={drug_css_prefix(drug)}> Display {drug}</label><br>
  ))}
</div>
<table id="safety_grid" style="display: none;">
  <tr class:list={"topkey"}>
    <td></td>
    {drugs.map((drug) => (
      <td class:list={drug_css_prefix(drug)}>{drug}</td>
    ))
  }
  </tr>
    {drugs.map((drugrow) => (
      <tr class:list={drug_css_prefix(drugrow)}>
        <td class:list={drug_css_prefix(drugrow)}>{drugrow}</td>
        {drugs.map((drugcell) => (
          <td class:list={[risk_css_prefix(risk([page,drugrow,drugcell], data)),drug_css_prefix(drugrow),drug_css_prefix(drugcell)]}><Druglink drug={combo([page,drugrow,drugcell])} /></td>
         ))}
      </tr>
     ))}

</table>
