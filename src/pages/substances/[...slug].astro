---
import { getCollection } from 'astro:content';
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const pages = await getCollection('substances');
  return pages.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}
// 2. When it's time to render, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content } = await entry.render();
import data from '../../data.json';
let value = entry.data.slug

import Grid from '../../components/grid.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';
let visible = false
if (entry.data.display_grid){
  visible = true
}
import Disclaimer from '../../components/disclaimer.astro';
---

<BaseLayout pageTitle={entry.data.title}>
    <div>
  <canvas id="myChart"></canvas>
</div>

  <article class="prose lg:prose-xl mx-auto">

    <h2> {entry.data.title} </h2>
    <img src={entry.data.image_location} />
    {entry.data.image_caption}
    <h3>Commonly Known as: </h3>
      <ul >
    {entry.data.aka.map((name) => (
      <li>
      {name}
      </li>
      ))
    }</ul>
    <Content />




  </article>


<script>
  import Chart from 'chart.js/auto';
  const ctx = document.getElementById('myChart');
  new Chart(ctx, {
    type: 'line',
    data: {
  labels: ["bob", "fish"],
  datasets: [{
    label: 'My First Dataset',
    data: [65, 59, 80, 81, 56, 55, 40],
    fill: false,
    borderColor: 'rgb(75, 192, 192)',
    tension: 0.1
  }]
},

  });

</script>


<Disclaimer />
{visible && <Grid page={entry.data.slug} data={data} />}
</BaseLayout>
